<idea-plugin require-restart="true">
    <id>com.github.clojure-lsp</id>
    <name>Clojure LSP</name>
    <vendor url="https://github.com/clojure-lsp/clojure-lsp-intellij">clojure-lsp</vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.redhat.devtools.lsp4ij</depends>

    <extensions defaultExtensionNs="com.redhat.devtools.lsp4ij">
         <server id="clojure-lsp"
              name="Clojure LSP"
              factoryClass="com.github.clojure_lsp.intellij.extension.LanguageServerFactory">
          <description><![CDATA[
          <h3>Clojure LSP: The Clojure language server that provides features using static analysis.</h3>

          <h4>For more details, check <a href="https://clojure-lsp.io">clojure-lsp.io</a></h4>
          ]]>
          </description>
      </server>
      <languageMapping language="clojure" serverId="clojure-lsp"/>
      <semanticTokensColorsProvider
          serverId="clojure-lsp"
          class="com.github.clojure_lsp.intellij.extension.ClojureSemanticTokensColorsProvider" />
    </extensions>

    <incompatible-with>org.jetbrains.idea.clojure</incompatible-with>
    <incompatible-with>com.cursiveclojure.cursive</incompatible-with>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Clojure language / lexer, syntax parser -->
        <fileType name="clojure" language="clojure" extensions="clj;cljs;cljc;cljd;edn;bb;clj_kondo"
                  implementationClass="com.github.clojure_lsp.intellij.ClojureFileType" fieldName="INSTANCE"/>

        <lang.parserDefinition language="clojure" implementationClass="com.github.clojure_lsp.intellij.language.parser.ClojureParserDefinition"/>
        <lang.syntaxHighlighterFactory language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.SyntaxHighlighter"/>
        <colorSettingsPage implementation="com.github.clojure_lsp.intellij.extension.ColorSettingsPage"/>

        <!-- Features -->
        <postStartupActivity implementation="com.github.ericdallo.clj4intellij.extension.NREPLStartup"/>
        <postStartupActivity implementation="com.github.clojure_lsp.intellij.extension.InitDBStartup"/>
        <postStartupActivity implementation="com.github.clojure_lsp.intellij.extension.RegisterActionsStartup"/>
        <statusBarWidgetFactory
            id="ClojureLSPStatusBar"
            displayName="Clojure LSP"
            order="first"
            implementation="com.github.clojure_lsp.intellij.extension.StatusBarFactory" />
        <lang.foldingBuilder language="clojure"
                             implementationClass="com.redhat.devtools.lsp4ij.features.foldingRange.LSPFoldingRangeBuilder"
                             order="first"/>
        <codeInsight.parameterInfo
            language="clojure"
            implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>
        <lang.psiStructureViewFactory
            language="clojure"
            order="first"
            implementationClass="com.redhat.devtools.lsp4ij.features.documentSymbol.LSPDocumentSymbolStructureViewFactory"/>
        <callHierarchyProvider
            language="clojure"
            implementationClass="com.redhat.devtools.lsp4ij.features.callHierarchy.LSPCallHierarchyProvider" />
        <codeBlockProvider
            language="clojure"
            implementationClass="com.redhat.devtools.lsp4ij.features.codeBlockProvider.LSPCodeBlockProvider"
            order="first"/>

        <!-- misc -->
        <moduleBuilder builderClass="com.github.clojure_lsp.intellij.extension.ClojureModuleBuilder"/>
        <spellchecker.bundledDictionaryProvider implementation="com.github.clojure_lsp.intellij.extension.BundledDictionaryProvider"/>
        <lang.commenter language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.Commenter"/>
        <lang.quoteHandler language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.QuoteHandler"/>
        <lang.braceMatcher language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.BraceMatcher"/>
        <applicationService serviceImplementation="com.github.clojure_lsp.intellij.extension.SettingsState"/>
        <applicationConfigurable
            parentId="tools"
            instance="com.github.clojure_lsp.intellij.extension.GeneralSettingsConfigurable"
            id="com.github.clojure_lsp.intellij.extension.GeneralSettingsConfigurable"
            displayName="Clojure LSP"/>
        <lineIndentProvider implementation="com.github.clojure_lsp.intellij.extension.LineIndentProvider"/>
        <notificationGroup id="Clojure LSP notifications"
                           displayType="BALLOON"/>
    </extensions>

    <applicationListeners>
        <listener topic="com.intellij.ide.AppLifecycleListener"
                  class="com.github.ericdallo.clj4intellij.listener.ClojureClassLoaderListener"/>
    </applicationListeners>
</idea-plugin>
