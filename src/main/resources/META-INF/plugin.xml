<idea-plugin require-restart="true">
    <id>com.github.clojure-lsp</id>
    <name>Clojure LSP</name>
    <vendor url="https://github.com/clojure-lsp/clojure-lsp-intellij">clojure-lsp</vendor>

    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="clojure" language="clojure" extensions="clj;cljs;cljc;cljd;edn;bb;clj_kondo"
                  implementationClass="com.github.clojure_lsp.intellij.ClojureFileType" fieldName="INSTANCE"/>

        <!-- syntax parse -->
        <lang.parserDefinition language="clojure" implementationClass="com.github.clojure_lsp.intellij.language.parser.ClojureParserDefinition"/>
        <lang.syntaxHighlighterFactory language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.SyntaxHighlighter"/>
        <colorSettingsPage implementation="com.github.clojure_lsp.intellij.extension.ColorSettingsPage"/>

        <!-- LSP features -->
        <postStartupActivity
            implementation="com.github.clojure_lsp.intellij.extension.Startup"/>
        <statusBarWidgetFactory
            id="ClojureLSPStatusBar"
            displayName="Clojure LSP"
            order="first"
            implementation="com.github.clojure_lsp.intellij.extension.StatusBarFactory" />
        <editorFactoryDocumentListener
            implementation="com.github.clojure_lsp.intellij.listener.FileListener"/>
        <externalAnnotator language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.Annotator" />
        <documentationProvider implementationClass="com.github.clojure_lsp.intellij.extension.Documentation"
                               language="clojure" order="first"/>
        <formattingService implementation="com.github.clojure_lsp.intellij.extension.Formatting"/>
        <codeInsight.inlayProvider
            language="clojure"
            isEnabledByDefault="true"
            implementationClass="com.github.clojure_lsp.intellij.extension.CodeLensProvider"/>
        <completion.contributor language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.CompletionContributor"/>
        <notificationGroup id="Clojure LSP notifications"
                           displayType="BALLOON"/>

        <!-- misc -->
        <spellchecker.bundledDictionaryProvider implementation="com.github.clojure_lsp.intellij.extension.BundledDictionaryProvider"/>
        <lang.commenter language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.Commenter"/>
        <lang.quoteHandler language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.QuoteHandler"/>
        <lang.braceMatcher language="clojure" implementationClass="com.github.clojure_lsp.intellij.extension.BraceMatcher"/>
        <applicationService serviceImplementation="com.github.clojure_lsp.intellij.extension.SettingsState"/>
        <applicationConfigurable
            parentId="tools"
            instance="com.github.clojure_lsp.intellij.extension.GeneralSettingsConfigurable"
            id="com.github.clojure_lsp.intellij.extension.GeneralSettingsConfigurable"
            displayName="Clojure LSP"/>
    </extensions>

    <actions>
        <group id="ClojureLSPGroup">
            <action class="com.github.clojure_lsp.intellij.action.DefinitionAction"
                    text="Find definition"
                    desciprtion="Find the defintion of the element at cursor."
                    id="ClojureLSPFindDefinition"
                    icon="com.github.clojure_lsp.intellij.Icons.CLOJURE">
                <keyboard-shortcut first-keystroke="shift alt F6" keymap="$default"/>
            </action>
            <action class="com.github.clojure_lsp.intellij.action.ReferencesAction"
                    text="Find references"
                    desciprtion="Find all references of the element at cursor."
                    id="ClojureLSPFindReferences"
                    icon="com.github.clojure_lsp.intellij.Icons.CLOJURE">
                <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
            </action>
            <separator/>
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
        </group>
    </actions>

    <applicationListeners>
        <listener topic="com.intellij.ide.AppLifecycleListener"
                  class="com.github.clojure_lsp.intellij.listener.AppLifecycleListener"/>
    </applicationListeners>

    <projectListeners>
        <listener topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"
                  class="com.github.clojure_lsp.intellij.listener.FileListener"/>
        <!-- TODO listen to vfs events outside editor -->
        <!-- <listener topic="com.intellij.openapi.vfs.newvfs.BulkFileListener" -->
        <!--           class="com.github.clojure_lsp.intellij.listener.FileListener"/> -->

    </projectListeners>
</idea-plugin>
